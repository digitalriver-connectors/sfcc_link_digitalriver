{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./cartridges/bm_digitalriver/cartridge/client/default/js/supportedCountriesAndCurrencies.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wCAAwC;AAC/D;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB,GAAG,uBAAuB;AAC5E;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","file":"default\\js\\supportedCountriesAndCurrencies.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./cartridges/bm_digitalriver/cartridge/client/default/js/supportedCountriesAndCurrencies.js\");\n","'use strict';\n\njQuery.noConflict();\n\njQuery(document).ready(function ($) {\n    const countryCurrencyPairsNames = JSON.parse(\n        $('#countryCurrencyPairsNames').val()\n    );\n    const countryCurrencyPairsCodes = JSON.parse(\n        $('#countryCurrencyPairsCodes').val()\n    );\n    const error = $('.error');\n\n    /**\n     * Loads the selected country-currency pairs into the DOM\n     * @param {Array} pairNames - array of country-currency pair names\n     * @param {Array} pairCodes - array of country-currency pair codes\n     */\n    function loadSelectedCountryCurrency(\n        pairNames,\n        pairCodes\n    ) {\n        const selectedCountryCurrencyList = $(\n            '#selected-country-currency-list'\n        );\n\n        for (let i = 0; i < pairNames.length; i++) {\n            const div = $('<div>').addClass('form-group');\n            const input = $('<input>')\n                .attr({\n                    type: 'text',\n                    name: 'countryCurrencyPair',\n                    value: pairNames[i],\n                    readonly: true\n                })\n                .addClass('form-control drbm-dp-input');\n            const button = $('<button>')\n                .attr({\n                    type: 'button',\n                    name: 'removeCountryCurrencyPair',\n                    value: pairCodes[i]\n                })\n                .addClass('btn btn-danger drbm-dp-remove-btn')\n                .text('Remove');\n\n            button.on('click', function () {\n                const deletedCountryCurrencyPair = $(this).val();\n                $.ajax({\n                    url: $('#add-country-currency').data('delete-url'),\n                    type: 'post',\n                    dataType: 'json',\n                    data: {\n                        deletedCountryCurrencyPair\n                    },\n                    success: function (response) {\n                        if (response.error) {\n                            error.text(response.error);\n                            error.removeClass('hidden');\n                            return false;\n                        }\n                        div.remove();\n                        error.addClass('hidden');\n                        return true;\n                    },\n                    error: function () {\n                        error.text(\n                            'Error while removing the country-currency pair. Please try again later'\n                        );\n                        error.removeClass('hidden');\n                        return false;\n                    }\n                });\n            });\n\n            div.append(input).append(button);\n            selectedCountryCurrencyList.append(div);\n        }\n    }\n\n    /**\n     * Creates a dynamic pricing selector for the supported countries and currencies\n     * @param {Object} countrySelect - the country select element\n     * @param {Object} currencySelect - the currency select element\n     * @param {Object} addButton - the add button element\n     * @param {Object} supportedCountriesAndCurrencies - the supported countries and currencies\n     * @param {Object} countries - the countries object\n     * @param {Object} currencies - the currencies object\n     * @param {Object} supportedPairs - the supported pairs object\n     */\n    function getDynamicPricingSelector() {\n        var countrySelect = $('#country-select');\n        var currencySelect = $('#currency-select');\n        var addButton = $('#add-country-currency');\n        var supportedCountriesAndCurrencies = addButton.data('supported-countries-currencies');\n        var countries = supportedCountriesAndCurrencies.countries;\n        var currencies = supportedCountriesAndCurrencies.currencies;\n        var supportedPairs = JSON.parse($('#supportedPairs').val());\n\n        // Populate the country select with the supported countries\n        for (let i = 0; i < Object.keys(supportedPairs).length; i++) {\n            let country = Object.keys(supportedPairs)[i];\n\n            let option = $('<option>', {\n                value: country,\n                text: countries[country].name,\n                class: 'countryName'\n            });\n\n            countrySelect.append(option);\n        }\n\n    // Update the currency select when the country select changes\n        countrySelect.on('change', () => {\n        // Clear the currency select\n            currencySelect.empty();\n\n        // Get the selected country\n            var selectedCountry = countrySelect.val();\n\n        // Populate the currency select with the values for the selected country\n            for (var currency of supportedPairs[selectedCountry]) {\n                let option = $('<option>', {\n                    value: currency,\n                    text: currencies[currency].name\n                });\n                currencySelect.append(option);\n            }\n        });\n    }\n    /**\n     * Adds a country-currency pair to the list of selected country-currency pairs\n     * @param {Object} country - the selected country\n     * @param {Object} currency - the selected currency\n     */\n    function addCountryCurrency() {\n        $('#add-country-currency').on('click', function () {\n            const country = $('#country-select');\n            const currency = $('#currency-select');\n            const selectedCountry = country.find('option:selected');\n            const selectedCurrency = currency.find('option:selected');\n            const fieldText = selectedCountry.text() + ' - ' + selectedCurrency.text();\n\n            if (fieldText.includes('Select')) {\n                if (\n                    selectedCountry.text().includes('Select') &&\n                    selectedCurrency.text().includes('Select')\n                ) {\n                    error.text('Please select a country and a currency.');\n                } else if (selectedCountry.text().includes('Select')) {\n                    error.text('Please select a country.');\n                } else if (selectedCurrency.text().includes('Select')) {\n                    error.text('Please select a currency.');\n                }\n                error.removeClass('hidden');\n                return false;\n            }\n\n            // Make AJAX call\n            $.ajax({\n                url: $(this).data('add-url'),\n                type: 'post',\n                dataType: 'json',\n                data: {\n                    country: selectedCountry.val(),\n                    currency: selectedCurrency.val()\n                },\n                success: function (response) {\n                    if (response.error) {\n                        error.text(response.error);\n                        error.removeClass('hidden');\n                        return false;\n                    }\n                    loadSelectedCountryCurrency(\n                        [fieldText],\n                        [`${selectedCountry.val()}-${selectedCurrency.val()}`]\n                    );\n                    error.addClass('hidden');\n                    return true;\n                },\n                error: function () {\n                    error.text('Error while adding country currency pair');\n                    error.removeClass('hidden');\n                    return false;\n                }\n            });\n            return true;\n        });\n    }\n\n    getDynamicPricingSelector();\n    loadSelectedCountryCurrency(\n        countryCurrencyPairsNames,\n        countryCurrencyPairsCodes\n    );\n    addCountryCurrency();\n});\n"],"sourceRoot":""}